{"ast":null,"code":"var _jsxFileName = \"D:\\\\rani\\\\Coding Ninja\\\\Projects\\\\Web dev Projects\\\\React Projects\\\\Joke Generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport useFetch from \"./useFetch.js\";\n// import the custom hook to use in this document\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const url = \"https://v2.jokeapi.dev/joke/Programming?type=single\";\n  // Use the custom hook here\n  const {\n    data,\n    loading,\n    error,\n    getJoke\n  } = useFetch(url);\n  const displayJoke = () => {\n    getJoke();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Joke Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Something went wrong: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data && data.joke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: displayJoke,\n      children: \"New Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jxh2VpqOlcgVudfzk4dKrZxTDrM=\", false, function () {\n  return [useFetch];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useFetch","jsxDEV","_jsxDEV","App","_s","url","data","loading","error","getJoke","displayJoke","className","children","fileName","_jsxFileName","lineNumber","columnNumber","joke","onClick","_c","$RefreshReg$"],"sources":["D:/rani/Coding Ninja/Projects/Web dev Projects/React Projects/Joke Generator/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport useFetch from \"./useFetch.js\";\n// import the custom hook to use in this document\nexport default function App() {\n  const url = \"https://v2.jokeapi.dev/joke/Programming?type=single\";\n  // Use the custom hook here\nconst {data, loading, error, getJoke} = useFetch(url);\n\n const displayJoke=()=>{\n  getJoke();\n }\n  return (\n    <div className=\"App\">\n      <h1>Joke Generator</h1>\n      {/* Do not modify the below code */}\n      {loading && <h2>Loading...</h2>}\n      {error && <h2>Something went wrong: {error}</h2>}\n      <h2>{data && data.joke}</h2>\n      <button className=\"btn\" onClick={displayJoke}>New Joke</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,QAAQ,MAAM,eAAe;AACpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,GAAG,GAAG,qDAAqD;EACjE;EACF,MAAM;IAACC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGT,QAAQ,CAACK,GAAG,CAAC;EAEpD,MAAMK,WAAW,GAACA,CAAA,KAAI;IACrBD,OAAO,CAAC,CAAC;EACV,CAAC;EACA,oBACEP,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEtBT,OAAO,iBAAIL,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BR,KAAK,iBAAIN,OAAA;MAAAU,QAAA,GAAI,wBAAsB,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChDd,OAAA;MAAAU,QAAA,EAAKN,IAAI,IAAIA,IAAI,CAACW;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5Bd,OAAA;MAAQS,SAAS,EAAC,KAAK;MAACO,OAAO,EAAER,WAAY;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACZ,EAAA,CAlBuBD,GAAG;EAAA,QAGaH,QAAQ;AAAA;AAAAmB,EAAA,GAHxBhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}